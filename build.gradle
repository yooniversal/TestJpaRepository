import org.jetbrains.kotlin.gradle.dsl.jvm.JvmTargetValidationMode
import org.jetbrains.kotlin.gradle.tasks.KotlinJvmCompile

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.jetbrains.kotlin.plugin.spring" version "2.0.0"
	id "org.jetbrains.kotlin.plugin.jpa" version "2.0.0"
	id 'org.jetbrains.kotlin.jvm' version '2.0.0'
	id 'org.jetbrains.kotlin.kapt' version '2.0.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.h2database:h2'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'
	kapt("com.querydsl:querydsl-apt:5.0.0:jakarta")
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.mockk:mockk:1.12.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation "org.jetbrains.kotlin:kotlin-stdlib"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(KotlinJvmCompile.class).configureEach {
	jvmTargetValidationMode = JvmTargetValidationMode.WARNING
}